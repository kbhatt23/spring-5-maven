spring security is based on servler fileters
Servlet fileters run outside of spring context
spring servlet filters acts as pre processing and stops showing resource in case of bad user.

Flow :

Request from browser ->  spring security servlet filters -> 
							a. check if resource is secured 
							      - if not secured -> show the resource
							      - if secured
								authenticate the user -> if not logged in show login page
								
								b. if authencitcation is succesful -> authorize the customer
                                                                   -> show the resource

Authrozation : It means check if logged in user has proper role to access the particular resource it is requesting 

Differnet spring secutiry options:
a. Declarative : just provide details like urls , roles, users , how user data is stored in db or in memeory etc
b. programtic : implment code yourself by floowling specific contracts

To open web browser in eclipse : go to java ee perspective -> click on globe button at top right
Steps in code for security:
a. add maven dependencies for spring security web and spring security config.
b. Extend asbstractSercurityWebinitiaizer so that spring securoity servlet filter gets registered to spring.
c. Create config for enabling web security and add code for configurere adapter -> configure function

Logout configuration steps:
in httprequest param we need to add logout to permit all.
/logout is the post url that we need to hit to get logout

spring securoity do following in post clal of logout:
a. invlaidate current session scop
b. clear session cookies in browser
c. redirect to login page with param -> logout that we can use to display success message

//we can confifure the post logout url and success request url on logout in configureer adatper 

CSRF : It means cross site request forgery
It is a forgery when some hacker can trick the site that user is logged in and try to access resources that are not open for user.
like bying unwanter item in cart, sending money unintentiaonally form banking apps
This is handled in spring web secutiry by default -> in configurer adatper it is enabled by default

Process : Along with the having logged in cookies every post request need to send a vlaidation token to be validated by spring filers
spring security filters handles it by default
spring formLform tag send the token generated by filer on its own while submitting post request
We can disable CSRF if the application is non web browser , like rest ,  as in application to application communcation hacker can not forcefully
send the call from user application ->  he can access browser to hack only one applciation

in normal fomr we need to manually add the csrf token for each post request, form:form tag do it by its own.


We can also JDBC based data store -> we can store the users and authorities in OOB pre defined table
Table schemas are as follows:
user -> username , password and enabled  : password is set in specific format

password format : {encrypotion-type}passwordEncrypted   eg-> {noop}plainTextPAssword
														    {bcrypt}encryptedpassword
authorities -> username, authority

Basic code steps  to handle ethis :
a. Create SQL for users and authorities tables and insert data in it .
b. insert data in both the tables
c. add maven dependcies for spring security jdbc , mysql connector, connection pools etc
d. create spring configuration for data soruce using jdbc properties
. modify spring security config to use data store instead of in memory data base


